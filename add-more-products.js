const mongoose = require('mongoose');
require('dotenv').config();

// Product schema
const productSchema = new mongoose.Schema({
  product_name: {
    type: String,
    required: true,
    trim: true
  },
  category_id: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Category',
    required: true
  },
  brand: {
    type: String,
    trim: true
  },
  price: {
    type: Number,
    required: true,
    min: 0
  },
  stock_quantity: {
    type: Number,
    required: true,
    min: 0,
    default: 0
  },
  description: {
    type: String,
    trim: true
  },
  image_url: {
    type: String,
    trim: true
  },
  specifications: {
    type: Object,
    default: {}
  },
  is_active: {
    type: Boolean,
    default: true
  }
}, {
  timestamps: {
    createdAt: 'created_at',
    updatedAt: 'updated_at'
  }
});

const Product = mongoose.model('Product', productSchema);

// Category schema
const categorySchema = new mongoose.Schema({
  category_name: {
    type: String,
    required: true,
    trim: true,
    unique: true
  },
  is_active: {
    type: Boolean,
    default: true
  }
}, {
  timestamps: {
    createdAt: 'created_at',
    updatedAt: 'updated_at'
  }
});

const Category = mongoose.model('Category', categorySchema);

// S·∫£n ph·∫©m m·ªõi ƒë·ªÉ th√™m v√†o
const newProducts = [
  {
    product_name: "iPhone 15 Pro 128GB",
    brand: "Apple",
    price: 28990000,
    stock_quantity: 25,
    description: "iPhone 15 Pro v·ªõi chip A17 Pro, camera 48MP v√† thi·∫øt k·∫ø titanium. M√†n h√¨nh Super Retina XDR 6.1 inch v·ªõi Dynamic Island.",
    image_url: "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "M√†n h√¨nh": "6.1 inch Super Retina XDR",
      "Chip": "A17 Pro",
      "Camera": "48MP + 12MP + 12MP",
      "B·ªô nh·ªõ": "128GB",
      "Pin": "L√™n ƒë·∫øn 23 gi·ªù"
    }
  },
  {
    product_name: "Samsung Galaxy S23 FE",
    brand: "Samsung",
    price: 14990000,
    stock_quantity: 30,
    description: "Galaxy S23 FE v·ªõi camera 50MP, m√†n h√¨nh Dynamic AMOLED 2X 6.4 inch v√† chip Exynos 2200 m·∫°nh m·∫Ω.",
    image_url: "https://images.unsplash.com/photo-1580910051074-3eb694886505?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "M√†n h√¨nh": "6.4 inch Dynamic AMOLED 2X",
      "Chip": "Exynos 2200",
      "Camera": "50MP + 12MP + 8MP",
      "RAM": "8GB",
      "B·ªô nh·ªõ": "256GB"
    }
  },
  {
    product_name: "MacBook Air M2 13 inch",
    brand: "Apple",
    price: 27990000,
    stock_quantity: 12,
    description: "MacBook Air M2 si√™u m·ªèng nh·∫π v·ªõi chip M2 8-core, m√†n h√¨nh Liquid Retina 13.6 inch v√† th·ªùi l∆∞·ª£ng pin l√™n ƒë·∫øn 18 gi·ªù.",
    image_url: "https://images.unsplash.com/photo-1496181133206-80ce9b88a853?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "M√†n h√¨nh": "13.6 inch Liquid Retina",
      "Chip": "Apple M2 8-core",
      "RAM": "8GB",
      "SSD": "256GB",
      "Pin": "L√™n ƒë·∫øn 18 gi·ªù"
    }
  },
  {
    product_name: "AirPods 3rd Generation",
    brand: "Apple",
    price: 4990000,
    stock_quantity: 40,
    description: "AirPods th·∫ø h·ªá 3 v·ªõi Spatial Audio, ch·ªëng n∆∞·ªõc IPX4 v√† th·ªùi l∆∞·ª£ng pin l√™n ƒë·∫øn 30 gi·ªù v·ªõi case s·∫°c.",
    image_url: "https://images.unsplash.com/photo-1572569511254-d8f925fe2cbb?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "Chip": "H1",
      "Ch·ªëng n∆∞·ªõc": "IPX4",
      "Pin": "6 gi·ªù + 24 gi·ªù v·ªõi case",
      "K·∫øt n·ªëi": "Bluetooth 5.0",
      "T√≠nh nƒÉng": "Spatial Audio"
    }
  },
  {
    product_name: "Samsung Galaxy Buds2 Pro",
    brand: "Samsung",
    price: 3990000,
    stock_quantity: 35,
    description: "Galaxy Buds2 Pro v·ªõi ch·ªëng ·ªìn ch·ªß ƒë·ªông th√¥ng minh, √¢m thanh Hi-Fi 24bit v√† thi·∫øt k·∫ø tho·∫£i m√°i.",
    image_url: "https://images.unsplash.com/photo-1583394838336-acd977736f90?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "Driver": "10mm + 5.3mm",
      "Ch·ªëng ·ªìn": "Active Noise Cancelling",
      "Pin": "5 gi·ªù + 13 gi·ªù v·ªõi case",
      "Ch·ªëng n∆∞·ªõc": "IPX7",
      "Codec": "Samsung Seamless Codec"
    }
  },
  {
    product_name: "iPad Air M1 64GB",
    brand: "Apple",
    price: 16990000,
    stock_quantity: 18,
    description: "iPad Air v·ªõi chip M1 m·∫°nh m·∫Ω, m√†n h√¨nh Liquid Retina 10.9 inch v√† h·ªó tr·ª£ Apple Pencil th·∫ø h·ªá 2.",
    image_url: "https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "M√†n h√¨nh": "10.9 inch Liquid Retina",
      "Chip": "Apple M1",
      "B·ªô nh·ªõ": "64GB",
      "Camera": "12MP Wide",
      "K·∫øt n·ªëi": "Wi-Fi 6, USB-C"
    }
  },
  {
    product_name: "Apple Watch SE 2022",
    brand: "Apple",
    price: 7990000,
    stock_quantity: 28,
    description: "Apple Watch SE v·ªõi GPS, m√†n h√¨nh Retina Always-On v√† c√°c t√≠nh nƒÉng s·ª©c kh·ªèe ti√™n ti·∫øn.",
    image_url: "https://images.unsplash.com/photo-1551816230-ef5deaed4a26?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "M√†n h√¨nh": "Retina Always-On",
      "Chip": "S8 SiP",
      "K·∫øt n·ªëi": "GPS + Cellular",
      "Ch·ªëng n∆∞·ªõc": "50m",
      "T√≠nh nƒÉng": "Heart Rate, ECG, Blood Oxygen"
    }
  },
  {
    product_name: "S·∫°c nhanh Apple 20W USB-C",
    brand: "Apple",
    price: 590000,
    stock_quantity: 100,
    description: "Adapter s·∫°c nhanh 20W USB-C ch√≠nh h√£ng Apple, t∆∞∆°ng th√≠ch v·ªõi iPhone, iPad v√† c√°c thi·∫øt b·ªã USB-C.",
    image_url: "https://images.unsplash.com/photo-1609592806787-3d9c5b1e8b8d?w=500&h=500&fit=crop&crop=center",
    specifications: {
      "C√¥ng su·∫•t": "20W",
      "C·ªïng": "USB-C",
      "T∆∞∆°ng th√≠ch": "iPhone 8 tr·ªü l√™n, iPad",
      "C√¥ng ngh·ªá": "Power Delivery",
      "K√≠ch th∆∞·ªõc": "Nh·ªè g·ªçn"
    }
  }
];

async function addMoreProducts() {
  try {
    console.log('üîå Connecting to MongoDB...');
    
    // K·∫øt n·ªëi database
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://truong2004ko:Truong2k4@cluster0daotruongdev.uu48g23.mongodb.net/khaicute?retryWrites=true&w=majority&appName=Cluster0DaoTruongDev');
    
    console.log('‚úÖ Connected to MongoDB successfully');

    // L·∫•y categories
    console.log('\nüìÇ Fetching categories...');
    const categories = await Category.find({});
    console.log(`Found ${categories.length} categories`);
    
    if (categories.length === 0) {
      console.log('‚ùå No categories found. Please create categories first.');
      return;
    }

    // T√¨m category ph√π h·ª£p cho t·ª´ng s·∫£n ph·∫©m
    const getCategory = (productName) => {
      const name = productName.toLowerCase();
      
      // T√¨m category ph√π h·ª£p
      for (const category of categories) {
        const categoryName = category.category_name.toLowerCase();
        if (name.includes('iphone') && categoryName.includes('ƒëi·ªán tho·∫°i')) return category._id;
        if (name.includes('samsung') && categoryName.includes('ƒëi·ªán tho·∫°i')) return category._id;
        if (name.includes('macbook') && categoryName.includes('laptop')) return category._id;
        if (name.includes('ipad') && categoryName.includes('tablet')) return category._id;
        if (name.includes('airpods') && categoryName.includes('tai nghe')) return category._id;
        if (name.includes('buds') && categoryName.includes('tai nghe')) return category._id;
        if (name.includes('watch') && categoryName.includes('ƒë·ªìng h·ªì')) return category._id;
        if (name.includes('s·∫°c') && categoryName.includes('ph·ª• ki·ªán')) return category._id;
      }
      
      // Fallback to first category
      return categories[0]._id;
    };

    console.log('\nüì¶ Adding new products...');
    let addedCount = 0;

    for (const productData of newProducts) {
      // Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i ch∆∞a
      const existingProduct = await Product.findOne({ product_name: productData.product_name });
      
      if (existingProduct) {
        console.log(`‚è≠Ô∏è  Skipping "${productData.product_name}" - already exists`);
        continue;
      }

      // Th√™m category_id
      const categoryId = getCategory(productData.product_name);
      productData.category_id = categoryId;

      // T·∫°o s·∫£n ph·∫©m m·ªõi
      const product = new Product(productData);
      await product.save();
      
      console.log(`‚úÖ Added "${productData.product_name}" - ${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(productData.price)}`);
      addedCount++;
    }

    console.log('\nüéâ Products added successfully!');
    console.log(`üìä Statistics:`);
    console.log(`   - New products added: ${addedCount}`);
    console.log(`   - Skipped (already exist): ${newProducts.length - addedCount}`);

    // Hi·ªÉn th·ªã t·ªïng s·ªë s·∫£n ph·∫©m
    const totalProducts = await Product.countDocuments({});
    console.log(`   - Total products in database: ${totalProducts}`);

  } catch (error) {
    console.error('‚ùå Error adding products:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå Disconnected from MongoDB');
  }
}

// Ch·∫°y script
addMoreProducts();
